{"remainingRequest":"C:\\Pradeep\\projects\\sourcecode\\nia\\nia\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Pradeep\\projects\\sourcecode\\nia\\nia\\node_modules\\angular2-uuid\\index.js","dependencies":[{"path":"C:\\Pradeep\\projects\\sourcecode\\nia\\nia\\node_modules\\angular2-uuid\\index.js","mtime":1527701784256},{"path":"C:\\Pradeep\\projects\\sourcecode\\nia\\nia\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1526717973884},{"path":"C:\\Pradeep\\projects\\sourcecode\\nia\\nia\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["\"use strict\";\r\nvar UUID = /*@__PURE__*/ (function () {\r\n    function UUID() {\r\n        // no-op\r\n    }\r\n    UUID.UUID = function () {\r\n        if (typeof (window) !== \"undefined\" && typeof (window.crypto) !== \"undefined\" && typeof (window.crypto.getRandomValues) !== \"undefined\") {\r\n            // If we have a cryptographically secure PRNG, use that\r\n            // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\r\n            var buf = new Uint16Array(8);\r\n            window.crypto.getRandomValues(buf);\r\n            return (this.pad4(buf[0]) + this.pad4(buf[1]) + \"-\" + this.pad4(buf[2]) + \"-\" + this.pad4(buf[3]) + \"-\" + this.pad4(buf[4]) + \"-\" + this.pad4(buf[5]) + this.pad4(buf[6]) + this.pad4(buf[7]));\r\n        }\r\n        else {\r\n            // Otherwise, just use Math.random\r\n            // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n            // https://stackoverflow.com/questions/11605068/why-does-jshint-argue-against-bitwise-operators-how-should-i-express-this-code\r\n            return this.random4() + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + \"-\" +\r\n                this.random4() + \"-\" + this.random4() + this.random4() + this.random4();\r\n        }\r\n    };\r\n    UUID.pad4 = function (num) {\r\n        var ret = num.toString(16);\r\n        while (ret.length < 4) {\r\n            ret = \"0\" + ret;\r\n        }\r\n        return ret;\r\n    };\r\n    UUID.random4 = function () {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);\r\n    };\r\n    return UUID;\r\n}());\r\nexports.UUID = UUID;\r\n",null]}