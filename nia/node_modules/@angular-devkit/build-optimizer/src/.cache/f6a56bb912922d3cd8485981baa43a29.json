{"remainingRequest":"C:\\Pradeep\\projects\\sourcecode\\nia\\nia\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Pradeep\\projects\\sourcecode\\nia\\nia\\node_modules\\rxjs-compat\\_esm5\\operator\\min.js","dependencies":[{"path":"C:\\Pradeep\\projects\\sourcecode\\nia\\nia\\node_modules\\rxjs-compat\\_esm5\\operator\\min.js","mtime":1527701786822},{"path":"C:\\Pradeep\\projects\\sourcecode\\nia\\nia\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1526717973884},{"path":"C:\\Pradeep\\projects\\sourcecode\\nia\\nia\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["import { min as higherOrderMin } from 'rxjs/operators';\r\n/**\r\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\r\n * and when source Observable completes it emits a single item: the item with the smallest value.\r\n *\r\n * <img src=\"./img/min.png\" width=\"100%\">\r\n *\r\n * @example <caption>Get the minimal value of a series of numbers</caption>\r\n * Rx.Observable.of(5, 4, 7, 2, 8)\r\n *   .min()\r\n *   .subscribe(x => console.log(x)); // -> 2\r\n *\r\n * @example <caption>Use a comparer function to get the minimal item</caption>\r\n * interface Person {\r\n *   age: number,\r\n *   name: string\r\n * }\r\n * Observable.of<Person>({age: 7, name: 'Foo'},\r\n *                       {age: 5, name: 'Bar'},\r\n *                       {age: 9, name: 'Beer'})\r\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\r\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\r\n * }\r\n *\r\n * @see {@link max}\r\n *\r\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\r\n * value of two items.\r\n * @return {Observable<R>} An Observable that emits item with the smallest value.\r\n * @method min\r\n * @owner Observable\r\n */\r\nexport function min(comparer) {\r\n    return higherOrderMin(comparer)(this);\r\n}\r\n//# sourceMappingURL=min.js.map",null]}